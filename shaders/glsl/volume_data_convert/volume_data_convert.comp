#version 450
#extension GL_EXT_scalar_block_layout : require
#extension GL_EXT_buffer_reference : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(buffer_reference, scalar) readonly buffer SourceBuffer
{
    uint source[];
};

layout(buffer_reference, scalar) writeonly buffer VoxelBuffer
{
    float voxels[];
};

layout(push_constant, scalar) uniform PushConstants
{
    uvec3 gridSize;
    SourceBuffer sourceBuffer;
    VoxelBuffer voxelBuffer;
} pushConstants;

void main()
{
    uvec3 id = gl_GlobalInvocationID;
    
    if(any(greaterThanEqual(id, pushConstants.gridSize)))
    {
        return;
    }

    uint index = id.x + pushConstants.gridSize.x * (id.y + pushConstants.gridSize.y * id.z);

    // Source voxel fetch
    uint data = pushConstants.sourceBuffer.source[index / 2];

    // ushort -> uint
    data = (index & 1) == 1 ? (data >> 16) : (data & 0xffffu);

    // byte order swap
    data = ((data & 0xff) << 8) + (data >> 8);

    // uint -> float
    pushConstants.voxelBuffer.voxels[index] = 20.0 * data / 0xffff;
}