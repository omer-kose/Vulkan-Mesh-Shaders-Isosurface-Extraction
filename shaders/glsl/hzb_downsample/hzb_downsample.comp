#version 450
#extension GL_EXT_scalar_block_layout : require


layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(set = 0, binding = 0) uniform sampler2D inImage;
layout(set = 0, binding = 1, r32f) uniform writeonly image2D outImage;

layout(push_constant, scalar) uniform block
{
	vec2 outImageSize;
};

void main()
{
	uvec2 pos = min(gl_GlobalInvocationID.xy, uvec2(outImageSize) - 1);

	// Sampler is set up to do min reduction, so this computes the minimum depth of a 2x2 texel quad
	float depth = texture(inImage, (vec2(pos) + vec2(0.5)) / outImageSize).x;

	imageStore(outImage, ivec2(pos), vec4(depth));
}